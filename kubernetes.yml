---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  labels:
    app.kubernetes.io/name: "demo-address"
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  name: "demo-address"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app.kubernetes.io/name: "demo-address"
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  name: "demo-address"
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: "demo-address"
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  type: "ClusterIP"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  annotations:
    app.dekorate.io/vcs-url: "<<unknown>>"
  labels:
    app.kubernetes.io/name: "demo-address"
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  name: "demo-address:view"
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: "view"
subjects:
- kind: "ServiceAccount"
  name: "demo-address"
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations:
    app.dekorate.io/commit-id: "<<unknown>>"
    app.dekorate.io/vcs-url: "<<unknown>>"
  labels:
    app.kubernetes.io/name: "demo-address"
    app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  name: "demo-address"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "demo-address"
      app.kubernetes.io/version: "0.0.1-SNAPSHOT"
  template:
    metadata:
      annotations:
        app.dekorate.io/commit-id: "<<unknown>>"
        app.dekorate.io/vcs-url: "<<unknown>>"
      labels:
        app.kubernetes.io/name: "demo-address"
        app.kubernetes.io/version: "0.0.1-SNAPSHOT"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "fsalikutluk/demo-address:0.0.1-SNAPSHOT"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/info"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: "demo-address"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
      serviceAccount: "demo-address"
